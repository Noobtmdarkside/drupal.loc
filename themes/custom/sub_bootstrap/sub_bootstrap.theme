<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */
use Drupal\Core\Url;
use Drupal\Component\Serialization\Json;
use Drupal\Core\Link;

/**
 * Implements hook_preprocess_HOOK() for node templates.
 */
function sub_bootstrap_preprocess_node(&$variables) {
	$variables['rocksolid'] = "*ROCKSOLID*";
	$variables['linka'] = array(
      '#type' => 'link',
      '#title' => 'Link content',
      '#url' => Url::fromRoute('system.admin_content'),
      '#options' => [
        'attributes' => [
          'class' => ['use-ajax'],
          'data-dialog-type' => 'modal',
          'data-dialog-options' => Json::encode([
            'width' => 700,
          ]),
        ],
    	],
      '#attached' => ['library' => ['core/drupal.dialog.ajax']],
    );
}
function sub_bootstrap_theme($existing, $type, $theme, $path)
{
    return [
        'user_register_form' => [
            'render element' => 'form',
            'template' => 'user-register-form',
        ],
    ];
}
/**
 * Implements hook_preprocess_menu__account() for HTML document templates.
 */
function sub_bootstrap_preprocess_menu__account(&$variables) {

  $uid = \Drupal::currentUser()->id();
  $name = \Drupal::currentUser()->getAccountName();

  $link_login = 'Логін / Регістрація';

  $link_logout = 'Вихід';

  $login_form = Url::fromRoute('reg.menu');
  $login_form->setOptions([
    'attributes' => [
      'class' => ['use-ajax'],
      'data-dialog-type' => 'modal',
      'data-dialog-options' => Json::encode([
        'title' => t('Увійдіть або заповніть форму регістрації'),
        'width' => 400,
        'height' => 400,
      ]),
      'attached' => ['library' => ['core/drupal.dialog.ajax']],
    ],
  ]);

  $login_off = Url::fromRoute('user.logout');

  if(empty($uid)) {
    $variables['login'] = Link::fromTextAndUrl(t($link_login), $login_form)->toString();
  } else {
    $variables['Logout'] = Link::fromTextAndUrl(t($link_logout), $login_off)->toString();
    $variables['name'] = Link::createFromRoute($name, 'entity.user.canonical', ['user' => $uid,]);
  }

}
/**
 * Implements hook_preprocess_page() for HTML document templates.
 */
function sub_bootstrap_preprocess_page(&$variables){

//  $curr_data = \Drupal::time()->getCurrentTime();
  $current_time = date('H');
//  $variables['timer']= $current_time;

//  kint(\Drupal::time()->getCurrentTime());
//  die('123');

  switch ($current_time) {

    case $current_time == 0 || $current_time <= 6:
      $variables['night'] = 'page-night';
      break;

    case $current_time == 7 || $current_time <= 12:
      $variables['morning'] = 'page-morning';
      break;

    case $current_time == 13 || $current_time <= 18:
      $variables['day'] = 'page-day';
      break;

    case $current_time == 19 || $current_time <= 23:
      $variables['evening'] = 'page-evening';
      break;

  }
}
